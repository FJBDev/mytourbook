////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.20Release
// Tag = $Name: AKW1_200 $
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_SDM_PROFILE_MESG_HPP)
#define FIT_SDM_PROFILE_MESG_HPP

#include "fit_mesg.hpp"

namespace fit
{

class SdmProfileMesg : public Mesg
{
   public:
      SdmProfileMesg(void) : Mesg(Profile::MESG_SDM_PROFILE)
      {
      }

      SdmProfileMesg(const Mesg &mesg) : Mesg(mesg)
      {
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns message_index field
      ///////////////////////////////////////////////////////////////////////
      FIT_MESSAGE_INDEX GetMessageIndex(void)
      {
         return GetFieldUINT16Value(254);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set message_index field
      ///////////////////////////////////////////////////////////////////////
      void SetMessageIndex(FIT_MESSAGE_INDEX messageIndex)
      {
         SetFieldUINT16Value(254, messageIndex);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns enabled field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetEnabled(void)
      {
         return GetFieldENUMValue(0);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set enabled field
      ///////////////////////////////////////////////////////////////////////
      void SetEnabled(FIT_BOOL enabled)
      {
         SetFieldENUMValue(0, enabled);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns sdm_ant_id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16Z GetSdmAntId(void)
      {
         return GetFieldUINT16ZValue(1);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set sdm_ant_id field
      ///////////////////////////////////////////////////////////////////////
      void SetSdmAntId(FIT_UINT16Z sdmAntId)
      {
         SetFieldUINT16ZValue(1, sdmAntId);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns sdm_cal_factor field
      // Units: %
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetSdmCalFactor(void)
      {
         return GetFieldFLOAT32Value(2);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set sdm_cal_factor field
      // Units: %
      ///////////////////////////////////////////////////////////////////////
      void SetSdmCalFactor(FIT_FLOAT32 sdmCalFactor)
      {
         SetFieldFLOAT32Value(2, sdmCalFactor);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns odometer field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetOdometer(void)
      {
         return GetFieldFLOAT32Value(3);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set odometer field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      void SetOdometer(FIT_FLOAT32 odometer)
      {
         SetFieldFLOAT32Value(3, odometer);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns speed_source field
      // Comment: Use footpod for speed source instead of GPS
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetSpeedSource(void)
      {
         return GetFieldENUMValue(4);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set speed_source field
      // Comment: Use footpod for speed source instead of GPS
      ///////////////////////////////////////////////////////////////////////
      void SetSpeedSource(FIT_BOOL speedSource)
      {
         SetFieldENUMValue(4, speedSource);
      }

};

} // namespace fit

#endif // !defined(FIT_SDM_PROFILE_MESG_HPP)
