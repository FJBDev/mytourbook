////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.20Release
// Tag = $Name: AKW1_200 $
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_BIKE_PROFILE_MESG_HPP)
#define FIT_BIKE_PROFILE_MESG_HPP

#include "fit_mesg.hpp"

namespace fit
{

class BikeProfileMesg : public Mesg
{
   public:
      BikeProfileMesg(void) : Mesg(Profile::MESG_BIKE_PROFILE)
      {
      }

      BikeProfileMesg(const Mesg &mesg) : Mesg(mesg)
      {
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns message_index field
      ///////////////////////////////////////////////////////////////////////
      FIT_MESSAGE_INDEX GetMessageIndex(void)
      {
         return GetFieldUINT16Value(254);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set message_index field
      ///////////////////////////////////////////////////////////////////////
      void SetMessageIndex(FIT_MESSAGE_INDEX messageIndex)
      {
         SetFieldUINT16Value(254, messageIndex);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns name field
      ///////////////////////////////////////////////////////////////////////
      string GetName(void)
      {
         return GetFieldSTRINGValue(0);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set name field
      ///////////////////////////////////////////////////////////////////////
      void SetName(string name)
      {
         SetFieldSTRINGValue(0, name);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns sport field
      ///////////////////////////////////////////////////////////////////////
      FIT_SPORT GetSport(void)
      {
         return GetFieldENUMValue(1);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set sport field
      ///////////////////////////////////////////////////////////////////////
      void SetSport(FIT_SPORT sport)
      {
         SetFieldENUMValue(1, sport);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns sub_sport field
      ///////////////////////////////////////////////////////////////////////
      FIT_SUB_SPORT GetSubSport(void)
      {
         return GetFieldENUMValue(2);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set sub_sport field
      ///////////////////////////////////////////////////////////////////////
      void SetSubSport(FIT_SUB_SPORT subSport)
      {
         SetFieldENUMValue(2, subSport);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns odometer field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetOdometer(void)
      {
         return GetFieldFLOAT32Value(3);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set odometer field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      void SetOdometer(FIT_FLOAT32 odometer)
      {
         SetFieldFLOAT32Value(3, odometer);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns bike_spd_ant_id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16Z GetBikeSpdAntId(void)
      {
         return GetFieldUINT16ZValue(4);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set bike_spd_ant_id field
      ///////////////////////////////////////////////////////////////////////
      void SetBikeSpdAntId(FIT_UINT16Z bikeSpdAntId)
      {
         SetFieldUINT16ZValue(4, bikeSpdAntId);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns bike_cad_ant_id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16Z GetBikeCadAntId(void)
      {
         return GetFieldUINT16ZValue(5);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set bike_cad_ant_id field
      ///////////////////////////////////////////////////////////////////////
      void SetBikeCadAntId(FIT_UINT16Z bikeCadAntId)
      {
         SetFieldUINT16ZValue(5, bikeCadAntId);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns bike_spdcad_ant_id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16Z GetBikeSpdcadAntId(void)
      {
         return GetFieldUINT16ZValue(6);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set bike_spdcad_ant_id field
      ///////////////////////////////////////////////////////////////////////
      void SetBikeSpdcadAntId(FIT_UINT16Z bikeSpdcadAntId)
      {
         SetFieldUINT16ZValue(6, bikeSpdcadAntId);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns bike_power_ant_id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16Z GetBikePowerAntId(void)
      {
         return GetFieldUINT16ZValue(7);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set bike_power_ant_id field
      ///////////////////////////////////////////////////////////////////////
      void SetBikePowerAntId(FIT_UINT16Z bikePowerAntId)
      {
         SetFieldUINT16ZValue(7, bikePowerAntId);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns custom_wheelsize field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetCustomWheelsize(void)
      {
         return GetFieldFLOAT32Value(8);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set custom_wheelsize field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      void SetCustomWheelsize(FIT_FLOAT32 customWheelsize)
      {
         SetFieldFLOAT32Value(8, customWheelsize);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns auto_wheelsize field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetAutoWheelsize(void)
      {
         return GetFieldFLOAT32Value(9);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set auto_wheelsize field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      void SetAutoWheelsize(FIT_FLOAT32 autoWheelsize)
      {
         SetFieldFLOAT32Value(9, autoWheelsize);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns bike_weight field
      // Units: kg
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetBikeWeight(void)
      {
         return GetFieldFLOAT32Value(10);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set bike_weight field
      // Units: kg
      ///////////////////////////////////////////////////////////////////////
      void SetBikeWeight(FIT_FLOAT32 bikeWeight)
      {
         SetFieldFLOAT32Value(10, bikeWeight);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns power_cal_factor field
      // Units: %
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetPowerCalFactor(void)
      {
         return GetFieldFLOAT32Value(11);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set power_cal_factor field
      // Units: %
      ///////////////////////////////////////////////////////////////////////
      void SetPowerCalFactor(FIT_FLOAT32 powerCalFactor)
      {
         SetFieldFLOAT32Value(11, powerCalFactor);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns auto_wheel_cal field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetAutoWheelCal(void)
      {
         return GetFieldENUMValue(12);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set auto_wheel_cal field
      ///////////////////////////////////////////////////////////////////////
      void SetAutoWheelCal(FIT_BOOL autoWheelCal)
      {
         SetFieldENUMValue(12, autoWheelCal);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns auto_power_zero field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetAutoPowerZero(void)
      {
         return GetFieldENUMValue(13);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set auto_power_zero field
      ///////////////////////////////////////////////////////////////////////
      void SetAutoPowerZero(FIT_BOOL autoPowerZero)
      {
         SetFieldENUMValue(13, autoPowerZero);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns id field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT8 GetId(void)
      {
         return GetFieldUINT8Value(14);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set id field
      ///////////////////////////////////////////////////////////////////////
      void SetId(FIT_UINT8 id)
      {
         SetFieldUINT8Value(14, id);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns spd_enabled field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetSpdEnabled(void)
      {
         return GetFieldENUMValue(15);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set spd_enabled field
      ///////////////////////////////////////////////////////////////////////
      void SetSpdEnabled(FIT_BOOL spdEnabled)
      {
         SetFieldENUMValue(15, spdEnabled);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns cad_enabled field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetCadEnabled(void)
      {
         return GetFieldENUMValue(16);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set cad_enabled field
      ///////////////////////////////////////////////////////////////////////
      void SetCadEnabled(FIT_BOOL cadEnabled)
      {
         SetFieldENUMValue(16, cadEnabled);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns spdcad_enabled field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetSpdcadEnabled(void)
      {
         return GetFieldENUMValue(17);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set spdcad_enabled field
      ///////////////////////////////////////////////////////////////////////
      void SetSpdcadEnabled(FIT_BOOL spdcadEnabled)
      {
         SetFieldENUMValue(17, spdcadEnabled);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns power_enabled field
      ///////////////////////////////////////////////////////////////////////
      FIT_BOOL GetPowerEnabled(void)
      {
         return GetFieldENUMValue(18);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set power_enabled field
      ///////////////////////////////////////////////////////////////////////
      void SetPowerEnabled(FIT_BOOL powerEnabled)
      {
         SetFieldENUMValue(18, powerEnabled);
      }

};

} // namespace fit

#endif // !defined(FIT_BIKE_PROFILE_MESG_HPP)
