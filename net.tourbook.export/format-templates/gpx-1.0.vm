<?xml version="1.0" encoding="UTF-8" ?>
<gpx  version="1.1"
	creator="$creator"
	xmlns="http://www.topografix.com/GPX/1/1"
	xmlns:gpxdata="http://www.cluetrust.com/XML/GPXDATA/1/0"
	xmlns:gpxx="http://www.garmin.com/xmlschemas/GpxExtensions/v3"
	xmlns:gpxtpx="http://www.garmin.com/xmlschemas/TrackPointExtension/v1"
	xmlns:mt="net.tourbook/1"
	xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd 
	http://www.cluetrust.com/XML/GPXDATA/1/0 http://www.cluetrust.com/Schemas/gpxdata10.xsd 
	http://www.garmin.com/xmlschemas/GpxExtensions/v3 http://www.garmin.com/xmlschemas/GpxExtensionsv3.xsd 
	http://www.garmin.com/xmlschemas/TrackPointExtension/v1 http://www.garmin.com/xmlschemas/TrackPointExtensionv1.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<metadata>	
		<time>$dateformat.format($starttime)</time>
		<bounds minlat="$min_latitude" minlon="$min_longitude" maxlat="$max_latitude" maxlon="$max_longitude"/>
##
#if($hasTourData)
		<extensions>
#if($tourData.AvgCadenceD() > 0)
			<mt:avgCadence>$nf1.format($tourData.AvgCadenceD)</mt:avgCadence>
#end
#if($tourData.AvgPulseD() > 0)
			<mt:avgPulse>$nf1.format($tourData.AvgPulseD)</mt:avgPulse>
#end
#if($tourData.AvgTemperatureD() > 0)
			<mt:avgTemperature>$nf1.format($tourData.AvgTemperatureD)</mt:avgTemperature>
#end
#if($tourData.BikerWeightD() > 0)
			<mt:bikerWeight>$nf1.format($tourData.BikerWeightD)</mt:BikerWeight>
#end
#if($tourData.Calories() > 0)
			<mt:calories>$tourData.Calories</mt:calories>
#end
#if($tourData.ConconiDeflection() > 0)
			<mt:conconiDeflection>$tourData.ConconiDeflection</mt:conconiDeflection>
#end
#if($tourData.getDateTimeCreated())
			<mt:dateTimeCreated>$dtIso.print($tourData.getDateTimeCreated().getMillis())</mt:dateTimeCreated>
#end
#if($tourData.getDateTimeModified())
			<mt:dateTimeModified>$dtIso.print($tourData.getDateTimeModified().getMillis())</mt:dateTimeModified>
#end
#if($tourData.getDeviceFirmwareVersion().length() > 0)
			<mt:deviceFirmwareVersion>$tourData.DeviceFirmwareVersion</mt:deviceFirmwareVersion>
#end
			<mt:deviceId>$tourData.DeviceId</mt:deviceId>
			<mt:deviceModeName>$tourData.DeviceModeName</mt:deviceModeName>
##			<mt:>$tourData.</mt:>
##			<mt:>$nf1.format($tourData.)</mt:>
		</extensions>
#end
##
	</metadata>
##
##
##
## WAYPOINTS
##
#if($hasWayPoints)
#foreach($point in $wayPoints)
	<wpt lat="$nf6.format($point.Latitude)" lon="$nf6.format($point.Longitude)">
##
#if($point.getTime())
		<time>$dateformat.format($point.Time)</time>
#end
##
#if($point.hasValidAltitude())
		<ele>$nf3.format($point.AltitudeD)</ele>
#end
##
#if($point.getName().length() > 0)
		<name><![CDATA[$!point.Name]]></name>
#end
##
#if($point.getComment().length() > 0)
		<desc><![CDATA[$!point.Comment]]></desc>
#end
##
#if($point.getUrlAddress().length() > 0)
		<url><![CDATA[$!point.UrlAddress]]></url>
#end
##
#if($point.getUrlText().length() > 0)
		<urlname><![CDATA[$!point.UrlText]]></urlname>
#end
##
#if($point.getSymbolName())
		<sym>$point.getSymbolName()</sym>
#end
##
	</wpt>
#end
#end
##
##
##
## TOUR MARKER
##
#if($hasTourMarkers)
#foreach($marker in $tourMarkers)
	<wpt lat="$nf6.format($marker.Latitude)" lon="$nf6.format($marker.Longitude)">
##
		<time>$dateformat.format($marker.MarkerTime)</time>
##
#if($marker.hasAltitude())
		<ele>$nf3.format($marker.AltitudeD)</ele>
#end
##
#if($marker.getLabel().length() > 0)
		<name><![CDATA[$!marker.Label]]></name>
#end
##
#if($marker.getDescription().length() > 0)
		<desc><![CDATA[$!marker.Description]]></desc>
#end
##
#if($marker.getUrlAddress().length() > 0)
		<url><![CDATA[$!marker.UrlAddress]]></url>
#end
##
#if($marker.getUrlText().length() > 0)
		<urlname><![CDATA[$!marker.UrlText]]></urlname>
#end
##
#if($hasTourData)
		<extensions>
			<mt:distance>$marker.Distance</mt:distance>
			<mt:isVisible>$marker.isMarkerVisible()</mt:isVisible>
			<mt:labelPos>$marker.LabelPosition</mt:labelPos>
			<mt:labelXOffset>$marker.LabelXOffset</mt:labelXOffset>
			<mt:labelYOffset>$marker.LabelYOffset</mt:labelYOffset>
			<mt:serieIndex>$marker.SerieIndex</mt:serieIndex>
			<mt:type>$marker.Type</mt:type>
		</extensions>
#end
##
	</wpt>
#end
#end
##
##
##
## ROUTES
##
#if($hasRoutes)
#foreach($route in $routes)
	<rte>
		<name><![CDATA[$!route.Identification]]></name>
#if($route.getComment().length() > 0)
		<desc><![CDATA[$!route.Comment]]></desc>
#end
		<number>$velocityCount</number>
#set ($points = $route.getWaypoints())
#foreach ($point in $points)
		<rtept lat="$nf6.format($point.Latitude)" lon="$nf6.format($point.Longitude)">
#if($point.hasValidAltitude())
			<ele>$nf3.format($point.Altitude)</ele>
#end
#if($point.getName().length() > 0)
			<name><![CDATA[$!point.Name]]></name>
#end
#if($point.getComment().length() > 0)
			<desc><![CDATA[$!point.Comment]]></desc>
#end
		</rtept>
#end
	</rte>
#end
#end
##
##
##
## TRACKS
##
#if($hasTracks)
#foreach($track in $tracks)
##
#set($close_segment = false)
	<trk>
#if($track.getIdentification().length() > 0)
		<name><![CDATA[$!track.Identification]]></name>
#end
#if($track.getComment().length() > 0)
		<desc><![CDATA[$!track.Comment]]></desc>
#end
##  <number>$velocityCount</number>
##
##
##
#set ($points = $track.getWaypoints())##
#foreach ($point in $points)## 
##
#if($point.isNewTrack())
#if($close_segment)## close trkseg, if not the first occurence
		</trkseg>
#end
		<trkseg>
#set($close_segment = true)
#end
			<trkpt lat="$nf6.format($point.Latitude)" lon="$nf6.format($point.Longitude)">
##
#if($point.getDate())
				<time>$dateformat.format($point.Date)</time>
#end
##
#if($point.hasValidAltitude())
				<ele>$nf3.format($point.Altitude)</ele>
#end
##
#if($point.hasValidExtention())
				<extensions>
					<gpxtpx:TrackPointExtension>
#if($point.hasValidTemperature())
						<gpxtpx:atemp>$nf1.format($point.Temperature)</gpxtpx:atemp>
#end
#if($point.hasValidHeartrate())
						<gpxtpx:hr>$point.Heartrate</gpxtpx:hr>
#end
#if($point.hasValidCadence())
						<gpxtpx:cad>$point.Cadence</gpxtpx:cad>
#end
					</gpxtpx:TrackPointExtension>
#if($point.hasValidDistance())
					<gpxdata:distance>$nf3.format($point.Distance)</gpxdata:distance>
#end
#if($point.hasValidGear())
					<mt:gear>$point.Gear</mt:gear>
#end
				</extensions>
#end
			</trkpt>
#end
#if($close_segment)
		</trkseg>
#end
	</trk>
#end
#end
</gpx>
